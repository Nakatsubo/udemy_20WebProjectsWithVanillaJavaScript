{"version":3,"file":"assets/js/main.js","mappings":"yBAEA,IAAMA,EAAUC,SAASC,eAAe,UAClCC,EAAUF,SAASC,eAAe,UAClCE,EAAUH,SAASC,eAAe,UAClCG,EAAUJ,SAASC,eAAe,SAClCI,EAAgBL,SAASC,eAAe,kBACxCK,EAAgBN,SAASC,eAAe,gBAwE9C,SAASM,EAAWC,GAGlB,IAFA,IAAMC,EAAc,GAEXC,EAAI,EAAGA,GAAK,IACfF,EAAK,gBAAD,OAAiBE,IADFA,GAAK,EAE1BD,EAAYE,KAAZ,UACKH,EAAK,gBAAD,OAAiBE,IAD1B,cACoCF,EAAK,aAAD,OAAcE,MAO1DJ,EAAcM,UAAd,qDAEUJ,EAAKK,QAFf,kCAGgBL,EAAKM,aAHrB,kBAG2CN,EAAKK,QAHhD,+DAKQL,EAAKO,YAAL,aAAyBP,EAAKO,YAA9B,QAAkD,GAL1D,qBAMQP,EAAKQ,QAAL,aAAqBR,EAAKQ,QAA1B,QAA0C,GANlD,gEASWR,EAAKS,gBAThB,sEAYUR,EAAYS,KAAI,SAAAC,GAAG,oBAAWA,EAAX,YAAuBC,KAAK,IAZzD,iDAoBFlB,EAAOmB,iBAAiB,UAtGxB,SAAoBC,GAElBA,EAAEC,iBAGFjB,EAAcM,UAAY,GAG1B,IAAMY,EAAOzB,EAAO0B,MAKhBD,EAAKE,OACPC,MAAM,wDAAD,OAAyDH,IAC3DI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ1B,EAAcO,UAAd,kCAAqDY,EAArD,WAEmB,OAAfO,EAAKC,MACP3B,EAAcO,UAAd,iDAEAoB,MAAMpB,UAAYmB,EAAKC,MACpBd,KAAI,SAAAV,GAAI,8EAEOA,EAAKM,aAFZ,kBAEkCN,EAAKK,QAFvC,qEAGiCL,EAAKyB,OAHtC,qCAIGzB,EAAKK,QAJR,wEAONO,KAAK,IAGZrB,EAAO0B,MAAQ,MAGnBS,MAAM,iCAkEV/B,EAAOkB,iBAAiB,SAjDxB,WAEEjB,EAAQQ,UAAY,GACpBP,EAAcO,UAAY,GAE1Be,MAAM,sDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAGJxB,EAFawB,EAAKC,MAAM,UA2C9B5B,EAAQiB,iBAAiB,SAAS,SAAAC,GAChC,IAAMa,EAAWb,EAAEc,KAAKC,MAAK,SAAAC,GAE3B,QAAIA,EAAKC,WACAD,EAAKC,UAAUC,SAAS,gBAOnC,GAAIL,EAAU,CACZ,IAAMM,EAASN,EAASO,aAAa,eA1EvCf,MAAM,wDAAD,OA6ESc,IA5Ebb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAe,GAIJpC,EAFaoC,EAAKX,MAAM,W","sources":["webpack:///./src/assets/js/index.js"],"sourcesContent":["import  '../scss/style.scss';\n\nconst search  = document.getElementById('search'),\n      submit  = document.getElementById('submit'),\n      random  = document.getElementById('random'),\n      mealsEL = document.getElementById('meals'),\n      resultHeading = document.getElementById('result-heading'),\n      single_mealEL = document.getElementById('single-meals');\n\n// Search meal and fetch from API\nfunction searchMeal(e) {\n  // event.preventDefaultメソッドは、submitイベントの発生元であるフォームが持つデフォルトの動作をキャンセルするメソッドです。\n  e.preventDefault();\n\n  // Clear single meal\n  single_mealEL.innerHTML = '';\n\n  // Get search term\n  const term = search.value;\n  // console.log(term);\n\n  // Check for empty\n  // trim() メソッド -> 文字列の両端の空白を削除します。\n  if (term.trim()) {\n    fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${term}`)\n      .then(res => res.json())\n      .then(data => {\n        // console.log(data);\n        resultHeading.innerHTML = `<h2>Search results for '${term}':</h2>`;\n\n        if (data.meals === null) {\n          resultHeading.innerHTML = `<p>There are no search results. Try again!</p>`;\n        } else {\n          meals.innerHTML = data.meals\n            .map(meal => `\n              <div class=\"meal\">\n                <img src=\"${meal.strMealThumb}\" alt=\"${meal.strMeal}\" />\n                <div class=\"meal-info\" data-mealId=\"${meal.idMeal}\">\n                  <h3>${meal.strMeal}</h3>\n                </div>\n              </div>\n            `).join('');\n        }\n        // Clear search text\n        search.value = '';\n      })\n  } else {\n    alert('Please enter a search term');\n  }\n}\n\n// Fetch meal by ID\nfunction getMealById(mealID) {\n  fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealID}`)\n  .then(res => res.json())\n  .then(date => {\n    // console.log(date);\n    const meal = date.meals[0];\n\n    addMealDOM(meal);\n  })\n}\n\n// Fetch random meal from API\nfunction getRandomMeal() {\n  // Clear meals and heading\n  mealsEL.innerHTML = '';\n  resultHeading.innerHTML = '';\n\n  fetch(`https://www.themealdb.com/api/json/v1/1/random.php`)\n    .then(res => res.json())\n    .then(data => {\n      const meal = data.meals[0];\n\n      addMealDOM(meal);\n    }) \n}\n\n// Add meal to DOM\nfunction addMealDOM(meal) {\n  const ingredients = [];\n\n  for (let i = 1; i <= 20; i += 1) {\n    if (meal[`strIngredient${i}`]) {\n      ingredients.push(\n        `${meal[`strIngredient${i}`]} - ${meal[`strMeasure${i}`]}`\n      );\n    } else {\n      break;\n    }\n  }\n\n  single_mealEL.innerHTML = `\n    <div class=\"single-meal\">\n      <h1>${meal.strMeal}</h1>\n      <img src=\"${meal.strMealThumb}\" alt=\"${meal.strMeal}\" />\n      <div class=\"single-meal-info\">\n        ${meal.strCategory ? `<p>${meal.strCategory}</p>` : ''}\n        ${meal.strArea ? `<p>${meal.strArea}</p>` : ''}\n      </div>\n      <div class=\"main\">\n        <p>${meal.strInstructions}</p>\n        <h2>Ingredients<h2>\n        <ul>\n          ${ingredients.map(ing => `<li>${ing}</li>`).join('')}\n        </ul>\n      </div>\n    </div>\n  `;\n}\n\n// Event Listeners\nsubmit.addEventListener('submit', searchMeal);\nrandom.addEventListener('click', getRandomMeal);\n\nmealsEL.addEventListener('click', e => {\n  const mealInfo = e.path.find(item  => {\n    // console.log(item);\n    if (item.classList) {\n      return item.classList.contains('meal-info');\n    } else {\n      return false;\n    }\n  })\n\n  // console.log(mealInfo);\n  if (mealInfo) {\n    const mealId = mealInfo.getAttribute('data-mealId');\n    // console.log(mealId);\n\n    getMealById(mealId);\n  }\n});"],"names":["search","document","getElementById","submit","random","mealsEL","resultHeading","single_mealEL","addMealDOM","meal","ingredients","i","push","innerHTML","strMeal","strMealThumb","strCategory","strArea","strInstructions","map","ing","join","addEventListener","e","preventDefault","term","value","trim","fetch","then","res","json","data","meals","idMeal","alert","mealInfo","path","find","item","classList","contains","mealId","getAttribute","date"],"sourceRoot":""}